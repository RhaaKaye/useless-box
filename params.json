{
  "name": "Useless-box",
  "tagline": "A simple arduino based useless box with \"surprises\"",
  "body": "# Useless Box\r\nA useless box is basically a machine which turns itself off. However, with a few additional servos, and a little programming, you're able to blow some live into it and give it some \"character\" - as well as adding a few surprises for the user...\r\n\r\n## TL;DR \r\n\r\nA demo video of the box. Because of randomization the video doesn't include _all_ different behavior patterns - there are more...\r\n\r\n[![Demo Video](https://img.youtube.com/vi/xstKcBLtHTI/0.jpg)](https://www.youtube.com/watch?v=xstKcBLtHTI\r\n\r\n## Features / Surprises\r\n\r\n* Control the door and \"hand\" separately\r\n* Detect the operator by using a distance sensor\r\n* Wave a white flag\r\n* Hop away\r\n* Ambient light\r\n\r\nI've used software debouncing of the switch because it's much easier than including additional wiring and parts.\r\nAlthough the MotorShield is clearly overkill for this project it reduces the complexity of the required electronics knowledge (and soldering) quite a bit.\r\n\r\n## Hardware\r\n\r\n### Electronics - Parts List\r\n\r\nThe following parts were used:\r\n\r\n| Amount | Part Type | Properties |\r\n|--------|-----------|------------|\r\n| 1 | [Arduino Uno](https://www.arduino.cc/en/Main/arduinoBoardUno) | |\r\n| 1 | [MotorShield](https://www.arduino.cc/en/Main/ArduinoMotorShieldR3) | Rev3 |\r\n| 2 | Basic Servo | You should use a high-torque servo for the arm |\r\n| 1 | Micro Servo | |\r\n| 1 | Infrared Proximity Sensor [Sharp GP2Y0A21YK0F](http://www.sharpsma.com/webfm_send/1489) | 10 - 80 cm |\r\n| 1 | DC Motor | geared |\r\n| 1 | Metallic Toggle Switch | |\r\n| 1 | Plastic Power Switch | |\r\n| 1 | LIPO Battery | 11.1v 1200mAh |\r\n| 1 | Resistor | 10k&#937; Pull-down for switch |\r\n| 2 | [NeoPixel](https://www.adafruit.com/category/168) | |\r\n| 1 | 5V UBEC DC-DC Converter | UBEC 5A Dynam DY-1016-5A |\r\n\r\n### Circuit\r\n\r\n![Circuit Diagram](images/useless-box_schem.png)\r\n\r\n### Material\r\n\r\n* Wooden box with enough space to fit everything into\r\n* Some chipboard ~ 4mm to build the arm and mountings\r\n* Rubber band to force-close the lid\r\n* Hinges\r\n* Cables\r\n\r\n### Tools\r\n\r\n* Solder\r\n* Jigsaw\r\n* Sanding paper\r\n* Wood glue\r\n\r\n## Operation\r\n\r\nMy useless box fulfills of course the basic functionality of turning itself off.\r\nBut using a few additional pieces of equipment it can:\r\n\r\n* \"Hop\" away\r\n* Detect the users distance (and react to it)\r\n* Wave a white flag - but without giving up of course :)\r\n\r\n# Software\r\n\r\nThe box has basically a fixed set of \"moves\" it can do to turn of the switch after it has been turned on. To make things a little more interesting, the moves are randomly used to surprise the operator.\r\n\r\nThe whole code is quite easy - there's nothing special about it.\r\nI've created a few bases classes to control every peripheral and another class \"Moves\" to implement the patterns. This is mainly because the basic Arduino way of programming leads to lots of code duplication and unreadable code.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}